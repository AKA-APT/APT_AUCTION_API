name: deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'corretto'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x ./gradlew

      - name: Build with Gradle
        run: ./gradlew bootjar

      - name: Copy JAR to server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "build/libs/auction-api.jar"
          target: "/home/ubuntu"

      # 프로세스 종료 단계를 별도로 분리하고 실패를 무시
      - name: Stop existing application
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            echo "Checking for existing application process..."
            if pgrep -f "auction-api.jar"; then
              echo "Stopping existing application..."
              pkill -f "auction-api.jar" || echo "Failed to kill process, but continuing..."
              echo "Waiting for process to terminate..."
              sleep 10
            else
              echo "No existing application process found."
            fi
            
            echo "Checking if port 8080 is in use..."
            if lsof -i :8080; then
              echo "Force killing process on port 8080..."
              fuser -k 8080/tcp || echo "Failed to kill process on port 8080, but continuing..."
              sleep 5
            else
              echo "Port 8080 is free."
            fi
        continue-on-error: true  # 이 단계가 실패해도 계속 진행

      # 애플리케이션 시작 단계를 별도로 분리
      - name: Start application
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            echo "Starting application..."
            mv /home/ubuntu/build/libs/auction-api.jar /home/ubuntu/auction-api.jar
            rm -rf /home/ubuntu/build
            cd /home/ubuntu
            nohup java -jar auction-api.jar \
            --spring.profiles.active=prod \
            -DAWS_ACCESS_KEY=${{ secrets.AWS_ACCESS_KEY }} \
            -DAWS_SECRET_KEY=${{ secrets.AWS_SECRET_KEY }} \
            -DAWS_REGION=ap-northeast-2 \
            > /home/ubuntu/auction-api.log 2>&1 &
            
            echo "Application started"
            sleep 35
            
            echo "Checking application health..."
            if curl -f http://localhost:8080/actuator/health; then
              echo "Application is healthy"
            else
              echo "Application failed to start"
              echo "Logs:"
              tail -n 100 /home/ubuntu/auction-api.log
              exit 1
            fi
            
            echo "Recent application logs:"
            tail -n 100 /home/ubuntu/auction-api.log
